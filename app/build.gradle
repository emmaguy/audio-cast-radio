apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'spoon'

def parseEnvironmentVariable(envVariableName, defaultValue) {
    def envVariableValue = System.getenv(envVariableName)
    if(envVariableValue == null) {
        println "Failed to find environment variable '$envVariableName'. Using default value of '$defaultValue'"
        envVariableValue = defaultValue
    }

    return envVariableValue
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.emmaguy.audiocastradio"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        resValue "string", "cast_app_id", parseEnvironmentVariable('CAST_APP_ID', 'FFFFFFFF')

        testInstrumentationRunner "com.emmaguy.audiocastradio.AudioCastTestRunner"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    dexOptions{
        preDexLibraries = !'true'.equals(System.getenv('CI'))
    }
}
spoon {
    adbTimeout = 60 // seconds
}

dependencies {
    // Ui
    compile "com.android.support:appcompat-v7:$support_library_version"
    compile "com.android.support:recyclerview-v7:$support_library_version"

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Google Cast
    compile project(':CastCompanionLibrary')
    compile "com.android.support:mediarouter-v7:$support_library_version"
    compile 'com.google.android.gms:play-services-cast:8.4.0'

    // RxJava
    compile "io.reactivex:rxjava:${rxjava_version}"
    compile "io.reactivex:rxandroid:${rxjava_version}"
    compile 'com.jakewharton.rxrelay:rxrelay:1.0.0'
    compile 'com.jakewharton.rxbinding:rxbinding-appcompat-v7-kotlin:0.3.0'

    // Logging
    compile 'com.jakewharton.timber:timber:4.1.0'

    // Unit tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.34-beta'

    // Espresso tests
    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile("com.android.support.test.espresso:espresso-core:${espresso_version}") {
        exclude module: "espresso-idling-resource"
        exclude group: "com.android.support"
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espresso_version}") {
        exclude module: "espresso-core"
        exclude module: "recyclerview-v7"
        exclude group: "com.android.support"
    }
    androidTestCompile 'com.squareup.spoon:spoon-client:1.3.1'
}
buildscript {
    ext.kotlin_version = '1.0.0-rc-1036'
    ext.support_library_version = '23.1.1'
    ext.espresso_version = "2.2.1"
    ext.rxjava_version = "1.1.0"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}

/*
Resolves dependency versions across test and production APKs, specifically, transitive
dependencies. This is required since Espresso internally has a dependency on support-annotations.
*/
configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$support_library_version"
}