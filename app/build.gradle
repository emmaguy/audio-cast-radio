apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.emmaguy.audiocastradio"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        resValue "string", "cast_app_id", "placeholderId"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

dependencies {
    // Ui
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:recyclerview-v7:23.1.1'

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Google Cast
    compile project(':CastCompanionLibrary')
    compile 'com.android.support:mediarouter-v7:23.1.1'
    compile 'com.google.android.gms:play-services-cast:8.4.0'

    // RxJava
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.jakewharton.rxrelay:rxrelay:1.0.0'
    compile 'com.jakewharton.rxbinding:rxbinding-appcompat-v7-kotlin:0.3.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.34-beta'
}
buildscript {
    ext.kotlin_version = '1.0.0-beta-4589'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}


def configFile = file("secrets.properties")
if (configFile.canRead()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(configFile))

    if (props != null && props.containsKey('CAST_APP_ID')) {
        android.defaultConfig.resValue "string", "cast_app_id", props['CAST_APP_ID']
    } else {
        println 'Did not find cast app id, using default'
    }
} else {
    println 'secrets.properties not found'
}
